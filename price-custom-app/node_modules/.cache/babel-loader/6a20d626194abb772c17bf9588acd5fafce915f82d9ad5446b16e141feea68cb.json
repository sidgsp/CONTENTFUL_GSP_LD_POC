{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Siddharth Ganti\\\\Desktop\\\\GSP_LD_POC\\\\price-custom-app\\\\src\\\\locations\\\\Field.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { TextInput } from '@contentful/f36-components';\nimport { /* useCMA, */useSDK } from '@contentful/react-apps-toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Field = () => {\n  _s();\n  const sdk = useSDK();\n  /*\n     To use the cma, inject it as follows.\n     If it is not needed, you can remove the next line.\n  */\n  // const cma = useCMA();\n  // If you only want to extend Contentful's default editing experience\n  // reuse Contentful's editor components\n  // -> https://www.contentful.com/developers/docs/extensibility/field-editors/  \n  const [originalPrice, setOriginalPrice] = useState('');\n  const [markdownPrice, setMarkdownPrice] = useState('');\n  const getUnitPrices = async () => {\n    await fetch('prices.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      const unit = json[sdk.field.getValue()];\n      if (unit) {\n        setOriginalPrice(unit.originalPrice);\n        setMarkdownPrice(unit.markdownPrice);\n      } else {\n        setOriginalPrice('');\n        setMarkdownPrice('');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    // const updatePrices = async () => {\n    //   await sdk.entry.fields.originalPrice.setValue(originalPrice);\n\n    //   await sdk.entry.save();\n    // }\n\n    // sdk.window.startAutoResizer();\n\n    // try {\n    //   getUnitPrices();\n\n    //   updatePrices();\n    // }\n    // catch (err) {\n    //   console.log(err)\n    // }\n\n    // sdk.entry.fields.originalPrice.setValue(originalPrice)\n    // .then((data) => {\n    //   console.log(data);\n    // })\n    // .catch((error) => {\n    //   console.log(error);\n    // });\n    // // sdk.entry.fields.markdownPrice.setValue(markdownPrice);\n\n    // sdk.entry.save();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TextInput, {\n      value: sdk.field.getValue(),\n      onChange: e => {\n        sdk.field.setValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Field, \"pJu0XW+pD4R5BFU0Q795wYG2lmA=\", false, function () {\n  return [useSDK];\n});\n_c = Field;\nexport default Field;\nvar _c;\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"names":["React","useEffect","useState","TextInput","useSDK","jsxDEV","_jsxDEV","Fragment","_Fragment","Field","_s","sdk","originalPrice","setOriginalPrice","markdownPrice","setMarkdownPrice","getUnitPrices","fetch","headers","then","response","json","unit","field","getValue","catch","error","console","log","children","value","onChange","e","setValue","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Siddharth Ganti/Desktop/GSP_LD_POC/price-custom-app/src/locations/Field.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { TextInput } from '@contentful/f36-components';\nimport { /* useCMA, */ useSDK } from '@contentful/react-apps-toolkit';\n\nconst Field = () => {\n  const sdk = useSDK();\n  /*\n     To use the cma, inject it as follows.\n     If it is not needed, you can remove the next line.\n  */\n  // const cma = useCMA();\n  // If you only want to extend Contentful's default editing experience\n  // reuse Contentful's editor components\n  // -> https://www.contentful.com/developers/docs/extensibility/field-editors/  \n  const [originalPrice, setOriginalPrice] = useState('');\n  const [markdownPrice, setMarkdownPrice] = useState('');\n\n  const getUnitPrices = async () => {\n    await fetch('prices.json', {\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((json) => {\n      const unit = json[sdk.field.getValue()];\n\n      if (unit) {\n        setOriginalPrice(unit.originalPrice);\n        setMarkdownPrice(unit.markdownPrice);\n      }\n      else {\n        setOriginalPrice('');\n        setMarkdownPrice('');\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    // const updatePrices = async () => {\n    //   await sdk.entry.fields.originalPrice.setValue(originalPrice);\n\n    //   await sdk.entry.save();\n    // }\n\n    // sdk.window.startAutoResizer();\n\n    // try {\n    //   getUnitPrices();\n\n    //   updatePrices();\n    // }\n    // catch (err) {\n    //   console.log(err)\n    // }\n\n    // sdk.entry.fields.originalPrice.setValue(originalPrice)\n    // .then((data) => {\n    //   console.log(data);\n    // })\n    // .catch((error) => {\n    //   console.log(error);\n    // });\n    // // sdk.entry.fields.markdownPrice.setValue(markdownPrice);\n\n    // sdk.entry.save();\n  }, );\n\n  return (\n    <>\n      {/* <Paragraph>Hello Entry Field Component (AppId: {sdk.ids.app})</Paragraph> */}\n      <TextInput value={sdk.field.getValue()} onChange={(e) => {\n        sdk.field.setValue(e.target.value)}} />\n      {/* <Note>\n        Original Price: {originalPrice}\n        Markdown Price: {markdownPrice}\n      </Note> */}\n    </>\n  );\n};\n\nexport default Field;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,4BAA4B;AACtD,SAAS,aAAcC,MAAM,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,GAAG,GAAGP,MAAM,CAAC,CAAC;EACpB;AACF;AACA;AACA;EACE;EACA;EACA;EACA;EACA,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,KAAK,CAAC,aAAa,EAAE;MACzBC,OAAO,EAAG;QACR,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACX;IACH,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEE,IAAI,IAAK;MACd,MAAMC,IAAI,GAAGD,IAAI,CAACV,GAAG,CAACY,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;MAEvC,IAAIF,IAAI,EAAE;QACRT,gBAAgB,CAACS,IAAI,CAACV,aAAa,CAAC;QACpCG,gBAAgB,CAACO,IAAI,CAACR,aAAa,CAAC;MACtC,CAAC,MACI;QACHD,gBAAgB,CAAC,EAAE,CAAC;QACpBE,gBAAgB,CAAC,EAAE,CAAC;MACtB;IACF,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd;IACA;;IAEA;IACA;;IAEA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;EAAA,CACC,CAAC;EAEJ,oBACEK,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eAEEvB,OAAA,CAACH,SAAS;MAAC2B,KAAK,EAAEnB,GAAG,CAACY,KAAK,CAACC,QAAQ,CAAC,CAAE;MAACO,QAAQ,EAAGC,CAAC,IAAK;QACvDrB,GAAG,CAACY,KAAK,CAACU,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;MAAA;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAKzC,CAAC;AAEP,CAAC;AAAC5B,EAAA,CAjFID,KAAK;EAAA,QACGL,MAAM;AAAA;AAAAmC,EAAA,GADd9B,KAAK;AAmFX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}