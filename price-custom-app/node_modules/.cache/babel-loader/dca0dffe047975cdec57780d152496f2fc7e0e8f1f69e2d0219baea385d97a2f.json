{"ast":null,"code":"import { cx, css } from 'emotion';\nimport P from 'react';\nimport l from '@contentful/f36-tokens';\nimport { Text } from '@contentful/f36-typography';\nvar C = Object.defineProperty,\n  d = Object.defineProperties;\nvar y = Object.getOwnPropertyDescriptors;\nvar e = Object.getOwnPropertySymbols;\nvar m = Object.prototype.hasOwnProperty,\n  p = Object.prototype.propertyIsEnumerable;\nvar i = (t, o, n) => o in t ? C(t, o, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: n\n  }) : t[o] = n,\n  c = (t, o) => {\n    for (var n in o || (o = {})) m.call(o, n) && i(t, n, o[n]);\n    if (e) for (var n of e(o)) p.call(o, n) && i(t, n, o[n]);\n    return t;\n  },\n  f = (t, o) => d(t, y(o));\nvar g = (t, o) => {\n  var n = {};\n  for (var s in t) m.call(t, s) && o.indexOf(s) < 0 && (n[s] = t[s]);\n  if (t != null && e) for (var s of e(t)) o.indexOf(s) < 0 && p.call(t, s) && (n[s] = t[s]);\n  return n;\n};\nfunction a() {\n  return {\n    missingContent: css({\n      display: \"inline-block\",\n      padding: `0 ${l.spacingXs}`,\n      color: l.gray400\n    })\n  };\n}\nvar k = S => {\n  var r = S,\n    {\n      className: t,\n      testId: o = \"cf-ui-missing-content\",\n      label: n\n    } = r,\n    s = g(r, [\"className\", \"testId\", \"label\"]);\n  let x = a();\n  return P.createElement(Text, f(c({}, s), {\n    testId: o,\n    className: cx(x.missingContent, t),\n    \"aria-label\": n,\n    title: n\n  }), \"\\u2014\");\n};\nexport { k as MissingContent };\n//# sourceMappingURL=out.js.map","map":{"version":3,"names":[],"sources":["C:\\Users\\Siddharth Ganti\\Desktop\\GSP_LD_POC\\price-custom-app\\node_modules\\@contentful\\f36-empty-state\\src\\MissingContent\\MissingContent.tsx","C:\\Users\\Siddharth Ganti\\Desktop\\GSP_LD_POC\\price-custom-app\\node_modules\\@contentful\\f36-empty-state\\src\\MissingContent\\MissingContent.styles.ts"],"sourcesContent":["import { cx } from 'emotion';\nimport React from 'react';\nimport { getStyles } from './MissingContent.styles';\nimport type { CommonProps } from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\n\nexport interface MissingContentProps extends CommonProps {\n  label?: string;\n}\n\nexport const MissingContent = ({\n  className,\n  testId = 'cf-ui-missing-content',\n  label,\n  ...otherProps\n}: MissingContentProps) => {\n  const styles = getStyles();\n\n  return (\n    <Text\n      {...otherProps}\n      testId={testId}\n      className={cx(styles.missingContent, className)}\n      aria-label={label}\n      title={label}\n    >\n      &mdash;\n    </Text>\n  );\n};\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport function getStyles() {\n  return {\n    missingContent: css({\n      display: 'inline-block',\n      padding: `0 ${tokens.spacingXs}`,\n      color: tokens.gray400,\n    }),\n  };\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}