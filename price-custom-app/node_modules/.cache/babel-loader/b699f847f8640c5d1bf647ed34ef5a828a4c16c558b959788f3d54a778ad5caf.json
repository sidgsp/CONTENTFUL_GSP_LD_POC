{"ast":null,"code":"import React,{useCallback,useState,useEffect}from'react';import{Heading,Form,Paragraph,Flex}from'@contentful/f36-components';import{css}from'emotion';import{/* useCMA, */useSDK}from'@contentful/react-apps-toolkit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ConfigScreen=()=>{const[parameters,setParameters]=useState({});const sdk=useSDK();/*\n     To use the cma, inject it as follows.\n     If it is not needed, you can remove the next line.\n  */ // const cma = useCMA();\nconst onConfigure=useCallback(async()=>{// This method will be called when a user clicks on \"Install\"\n// or \"Save\" in the configuration screen.\n// for more details see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#register-an-app-configuration-hook\n// Get current the state of EditorInterface and other entities\n// related to this app installation\nconst currentState=await sdk.app.getCurrentState();return{// Parameters to be persisted as the app configuration.\nparameters,// In case you don't want to submit any update to app\n// locations, you can just pass the currentState as is\ntargetState:currentState};},[parameters,sdk]);useEffect(()=>{// `onConfigure` allows to configure a callback to be\n// invoked when a user attempts to install the app or update\n// its configuration.\nsdk.app.onConfigure(()=>onConfigure());},[sdk,onConfigure]);useEffect(()=>{(async()=>{// Get current parameters of the app.\n// If the app is not installed yet, `parameters` will be `null`.\nconst currentParameters=await sdk.app.getParameters();if(currentParameters){setParameters(currentParameters);}// Once preparation has finished, call `setReady` to hide\n// the loading screen and present the app to a user.\nsdk.app.setReady();})();},[sdk]);return/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",className:css({margin:'80px',maxWidth:'800px'}),children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Heading,{children:\"App Config\"}),/*#__PURE__*/_jsx(Paragraph,{children:\"Welcome to your contentful app. This is your config page.\"})]})});};export default ConfigScreen;","map":{"version":3,"names":["React","useCallback","useState","useEffect","Heading","Form","Paragraph","Flex","css","useSDK","jsx","_jsx","jsxs","_jsxs","ConfigScreen","parameters","setParameters","sdk","onConfigure","currentState","app","getCurrentState","targetState","currentParameters","getParameters","setReady","flexDirection","className","margin","maxWidth","children"],"sources":["C:/Users/Siddharth Ganti/Desktop/GSP_LD_POC/price-custom-app/src/locations/ConfigScreen.jsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { Heading, Form, Paragraph, Flex } from '@contentful/f36-components';\nimport { css } from 'emotion';\nimport { /* useCMA, */ useSDK } from '@contentful/react-apps-toolkit';\n\nconst ConfigScreen = () => {\n  const [parameters, setParameters] = useState({});\n  const sdk = useSDK();\n  /*\n     To use the cma, inject it as follows.\n     If it is not needed, you can remove the next line.\n  */\n  // const cma = useCMA();\n  const onConfigure = useCallback(async () => {\n    // This method will be called when a user clicks on \"Install\"\n    // or \"Save\" in the configuration screen.\n    // for more details see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#register-an-app-configuration-hook\n\n    // Get current the state of EditorInterface and other entities\n    // related to this app installation\n    const currentState = await sdk.app.getCurrentState();\n    return {\n      // Parameters to be persisted as the app configuration.\n      parameters,\n      // In case you don't want to submit any update to app\n      // locations, you can just pass the currentState as is\n      targetState: currentState,\n    };\n  }, [parameters, sdk]);\n\n  useEffect(() => {\n    // `onConfigure` allows to configure a callback to be\n    // invoked when a user attempts to install the app or update\n    // its configuration.\n    sdk.app.onConfigure(() => onConfigure());\n  }, [sdk, onConfigure]);\n\n  useEffect(() => {\n    (async () => {\n      // Get current parameters of the app.\n      // If the app is not installed yet, `parameters` will be `null`.\n      const currentParameters = await sdk.app.getParameters();\n      if (currentParameters) {\n        setParameters(currentParameters);\n      }\n      // Once preparation has finished, call `setReady` to hide\n      // the loading screen and present the app to a user.\n      sdk.app.setReady();\n    })();\n  }, [sdk]);\n\n  return (\n    <Flex flexDirection=\"column\" className={css({ margin: '80px', maxWidth: '800px' })}>\n      <Form>\n        <Heading>App Config</Heading>\n        <Paragraph>Welcome to your contentful app. This is your config page.</Paragraph>\n      </Form>\n    </Flex>\n  );\n};\nexport default ConfigScreen;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC/D,OAASC,OAAO,CAAEC,IAAI,CAAEC,SAAS,CAAEC,IAAI,KAAQ,4BAA4B,CAC3E,OAASC,GAAG,KAAQ,SAAS,CAC7B,OAAS,aAAcC,MAAM,KAAQ,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtE,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAChD,KAAM,CAAAe,GAAG,CAAGR,MAAM,CAAC,CAAC,CACpB;AACF;AACA;AACA,IAHE,CAIA;AACA,KAAM,CAAAS,WAAW,CAAGjB,WAAW,CAAC,SAAY,CAC1C;AACA;AACA;AAEA;AACA;AACA,KAAM,CAAAkB,YAAY,CAAG,KAAM,CAAAF,GAAG,CAACG,GAAG,CAACC,eAAe,CAAC,CAAC,CACpD,MAAO,CACL;AACAN,UAAU,CACV;AACA;AACAO,WAAW,CAAEH,YACf,CAAC,CACH,CAAC,CAAE,CAACJ,UAAU,CAAEE,GAAG,CAAC,CAAC,CAErBd,SAAS,CAAC,IAAM,CACd;AACA;AACA;AACAc,GAAG,CAACG,GAAG,CAACF,WAAW,CAAC,IAAMA,WAAW,CAAC,CAAC,CAAC,CAC1C,CAAC,CAAE,CAACD,GAAG,CAAEC,WAAW,CAAC,CAAC,CAEtBf,SAAS,CAAC,IAAM,CACd,CAAC,SAAY,CACX;AACA;AACA,KAAM,CAAAoB,iBAAiB,CAAG,KAAM,CAAAN,GAAG,CAACG,GAAG,CAACI,aAAa,CAAC,CAAC,CACvD,GAAID,iBAAiB,CAAE,CACrBP,aAAa,CAACO,iBAAiB,CAAC,CAClC,CACA;AACA;AACAN,GAAG,CAACG,GAAG,CAACK,QAAQ,CAAC,CAAC,CACpB,CAAC,EAAE,CAAC,CACN,CAAC,CAAE,CAACR,GAAG,CAAC,CAAC,CAET,mBACEN,IAAA,CAACJ,IAAI,EAACmB,aAAa,CAAC,QAAQ,CAACC,SAAS,CAAEnB,GAAG,CAAC,CAAEoB,MAAM,CAAE,MAAM,CAAEC,QAAQ,CAAE,OAAQ,CAAC,CAAE,CAAAC,QAAA,cACjFjB,KAAA,CAACR,IAAI,EAAAyB,QAAA,eACHnB,IAAA,CAACP,OAAO,EAAA0B,QAAA,CAAC,YAAU,CAAS,CAAC,cAC7BnB,IAAA,CAACL,SAAS,EAAAwB,QAAA,CAAC,2DAAyD,CAAW,CAAC,EAC5E,CAAC,CACH,CAAC,CAEX,CAAC,CACD,cAAe,CAAAhB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}