"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildAppDefinitionSettings = void 0;
const chalk_1 = __importDefault(require("chalk"));
const inquirer_1 = __importDefault(require("inquirer"));
const path_1 = __importDefault(require("path"));
async function buildAppDefinitionSettings() {
    console.log(chalk_1.default.dim(`
NOTE: This will create an app definition in your Contentful organization.
      - Read more about app definitions: ${chalk_1.default.underline('https://ctfl.io/app-definitions')}
      - Read more about app locations: ${chalk_1.default.underline('https://ctfl.io/app-locations')}
  `));
    const appDefinitionSettings = await inquirer_1.default.prompt([
        {
            name: 'name',
            message: `App name (${path_1.default.basename(process.cwd())}):`,
        },
        {
            name: 'locations',
            message: `Select where your app can be rendered:`,
            type: 'checkbox',
            choices: [
                { name: 'App configuration screen ', value: 'app-config' },
                { name: 'Entry field', value: 'entry-field' },
                { name: 'Entry sidebar', value: 'entry-sidebar' },
                { name: 'Entry editor', value: 'entry-editor' },
                { name: 'Page', value: 'page' },
                { name: 'Home', value: 'home' },
            ],
        },
        {
            name: 'fields',
            message: 'Select the field types the app can be rendered:',
            type: 'checkbox',
            choices: [
                { name: 'Short text', value: { type: 'Symbol' } },
                { name: 'Short text, list', value: { type: 'Array', items: { type: 'Symbol' } } },
                { name: 'Long text', value: { type: 'Text' } },
                { name: 'Rich text', value: { type: 'RichText' } },
                { name: 'Number, integer', value: { type: 'Integer' } },
                { name: 'Number, decimal', value: { type: 'Number' } },
                { name: 'Date and time', value: { type: 'Date' } },
                { name: 'Location', value: { type: 'Location' } },
                { name: 'Boolean', value: { type: 'Boolean' } },
                { name: 'JSON object', value: { type: 'Object' } },
                { name: 'Entry reference', value: { type: 'Link', linkType: 'Entry' } },
                {
                    name: 'Entry reference, list',
                    value: {
                        type: 'Array',
                        items: {
                            type: 'Link',
                            linkType: 'Entry',
                        },
                    },
                },
                { name: 'Media reference', value: { type: 'Link', linkType: 'Asset' } },
                {
                    name: 'Media reference, list',
                    value: { type: 'Array', items: { type: 'Link', linkType: 'Asset' } },
                },
            ],
            when(answers) {
                return answers.locations.includes('entry-field');
            },
            validate(answers) {
                if (answers.length < 1) {
                    return 'You must choose at least one field type.';
                }
                return true;
            },
        },
    ]);
    appDefinitionSettings.locations = ['dialog', ...appDefinitionSettings.locations];
    return appDefinitionSettings;
}
exports.buildAppDefinitionSettings = buildAppDefinitionSettings;
