"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAppDefinition = void 0;
const path_1 = __importDefault(require("path"));
const contentful_management_1 = require("contentful-management");
const chalk_1 = __importDefault(require("chalk"));
const lodash_1 = require("lodash");
const utils_1 = require("../utils");
const cache_credential_1 = require("../cache-credential");
const constants_1 = require("../constants");
async function fetchOrganizations(client) {
    try {
        const orgs = await client.getOrganizations();
        return orgs.items.map((org) => ({
            name: org.name,
            value: org.sys.id,
        }));
    }
    catch (err) {
        console.log(`
${chalk_1.default.red('Error:')} Could not fetch your organizations. Make sure you provided a valid access token.

${err.message}
    `);
        throw err;
    }
}
function assertValidArguments(accessToken, appDefinitionSettings) {
    if (!(0, lodash_1.isString)(accessToken)) {
        (0, utils_1.throwValidationException)('AccessToken', `Expected string got ${typeof accessToken}`);
    }
    if (!(0, lodash_1.isPlainObject)(appDefinitionSettings) || !(0, lodash_1.has)(appDefinitionSettings, 'locations')) {
        (0, utils_1.throwValidationException)('AppDefinitionSettings', `Expected plain object with 'location' property, got ${JSON.stringify(appDefinitionSettings, null, 2)}`, `Example: ${JSON.stringify({
            name: 'app-name',
            locations: ['entry-field'],
            fields: [{ type: 'Boolean' }],
        }, null, 2)}`);
    }
}
async function createAppDefinition(accessToken, appDefinitionSettings) {
    assertValidArguments(accessToken, appDefinitionSettings);
    const client = (0, contentful_management_1.createClient)({ accessToken });
    const organizations = await fetchOrganizations(client);
    const selectedOrg = await (0, utils_1.selectFromList)(organizations, 'Select an organization for your app:', constants_1.ORG_ID_ENV_KEY);
    const organizationId = selectedOrg.value;
    const appName = appDefinitionSettings.name || path_1.default.basename(process.cwd());
    const body = {
        name: appName,
        src: 'http://localhost:3000',
        locations: appDefinitionSettings.locations.map((location) => {
            if (location === 'entry-field') {
                return {
                    location,
                    fieldTypes: appDefinitionSettings.fields || [],
                };
            }
            return {
                location,
            };
        }),
    };
    try {
        const organization = await client.getOrganization(organizationId);
        const createdAppDefinition = await organization.createAppDefinition(body);
        await (0, cache_credential_1.cacheEnvVars)({
            [constants_1.APP_DEF_ENV_KEY]: createdAppDefinition.sys.id,
        });
        console.log(`
  ${chalk_1.default.greenBright('Success!')} Created an app definition for ${chalk_1.default.bold(appName)} in ${chalk_1.default.bold(selectedOrg.name)}.

  ${chalk_1.default.dim(`NOTE: You can update this app definition in your organization settings:
        ${chalk_1.default.underline(`https://app.contentful.com/deeplink?link=org`)}`)}

  ${chalk_1.default.bold('Next steps:')}
    1. Run your app with ${chalk_1.default.cyan('`npm start`')} inside of your app folder.
    2. Install this app definition to one of your spaces by opening:
        ${chalk_1.default.underline(`https://app.contentful.com/deeplink?link=apps&id=${createdAppDefinition.sys.id}`)}
    3. Learn how to build your first Contentful app:
        ${chalk_1.default.underline(`https://ctfl.io/app-tutorial`)}
      `);
    }
    catch (err) {
        console.log(`
  Something went wrong while creating the app definition.
  Run ${chalk_1.default.cyan('`npx @contentful/app-scripts create-app-definition`')} to try again.

  ${err.message}
    `);
        throw err;
    }
}
exports.createAppDefinition = createAppDefinition;
